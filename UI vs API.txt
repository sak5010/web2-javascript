UI
User Interface
버튼을 누르면 이벤트 발생 --> 유저가 누르는 것임.
사용자가 시스템을 제어하기 위해서 사용하는 조작장치를
유저인터페이스라고 하는 것임. UI.

API
Application Programming Interface
경고창이 생겼다 어떻게 만들어졌을까?
경고창을 띄우라고 프로그래밍 한것은 우리(프로그래머) 이지만
경고창의 디자인 같은 것들은 우리가 만든게 아니다.
웹브라우저를 만드는 사람들이 우리 대신에 경고창 기능을
미리 만들어 두었다가 우리가 alert이라는 함수를 실행하면
경고창을 띄워주겠다고 자바스크립트 사용설명서를 통해서 약속한 것이다.
우리는 그 약속을 따라 alert함수를 사용해서 경고창을 띄울 수 있는 것이다.
함수 alert은 경고창을 띄울 수 있는 조작장치 인 것이다.
이 alert은 사용자가 사용하는게 아니라 우리(프로그래머)가 사용한다.
application을 만들기 위해서 programming을 할 때 사용하는 조작장치들을
API라고 한다. ex) alert.

모든 프로그래밍 언어에 공통적으로 적용되는 얘기다.
API들을 순서에 맞게 잘 사용해서(응용해서)
프로그램을 만드는 것이다.
API와 순서는 필수불가결한 관계다.

- mor detail (from StackOverflow) -
UI
UI stands for User Interface. UI allows the user to interact with the application.

UI testing refers to testing graphical user interfaces, such as how user interacts with the application, testing application elements like fonts, layouts, buttons, images, colors, etc. Basically, UI testing concentrates on the look-and-feel of an application.

For more details on API testing, see:
http://www.guru99.com/gui-testing.html

API
API is an acronym for Application Programming Interface. API enables communication between two separate software systems. A software system implementing an API contains functions/sub-routines which can be executed by another software system.

API testing is checking API of a Software System. In order to check the API , it needs to be called from the calling software . Necessary test environment, database, server, application setup needs to be prepared before doing API Testing.

API testing is focused on the functionality of the business logic (such as a calculating total price) and it is entirely different from UI testing. It mainly concentrates on the business logic layer of the software architecture. This testing won’t concentrate on the look and feel of an application.

For more details on API testing, see:
http://www.guru99.com/api-testing.html

from Eric Elahi.